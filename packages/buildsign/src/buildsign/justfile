#? Load `.env`
set dotenv-load
#? Set shells
set windows-shell := ['powershell.exe', '-NonInteractive', '-NoProfile', '-Command']
set shell := ['bash', '--noprofile', '--norc', '--posix', '-c']
#? Set up reusable shell preambles
p := '. ' + justfile_dir()/'scripts/preamble' + (if os_family()=='windows' { '.ps1' } else {'.sh'})

#? Build

#* Tool versions
pyapp_version := '0.26.0'
python_version := '3.12'
uv_version := '0.5.29'

#* Project details
proj_name := 'hello'
proj_version := '0.0.0'
proj_icon := if path_exists(absolute_path( invocation_dir()/'data'/_icon )) == 'true' \
  {absolute_path( invocation_dir()/'data'/_icon )} \
  else {absolute_path( justfile_dir()/'data'/_default_icon )}
_icon := proj_name + '.ico'
_default_icon := 'default.ico'

#* Tools
zip := if os_family()=='windows' {require( '7z.exe' )} else {require( 'tar' )}
rcedit := require('rcedit' + _ext)
jsign := require('jsign' + _ext)
_ext := (if os_family()=='windows' { '.exe' } else {''})

#* Artifacts
wheel := absolute_path( invocation_dir()/'dist'/proj_name+'-'+proj_version+'-py3-none-any.whl' )
pyapp := absolute_path( invocation_dir()/'pyapp' )
pyapp_bin := absolute_path( pyapp/'target/release/pyapp.exe' )
cargo_lock := absolute_path( pyapp/'Cargo.lock' )
bin := absolute_path( invocation_dir()/'dist'/(proj_name+'.exe') )

#* Recipes

# Build wheel
build:
  {{p}} '{{invocation_dir()}}'; uv build --package '{{proj_name}}'

# Compile binary
compile \
  $PYAPP_EXPOSE_ALL_COMMANDS = '1' \
  $PYAPP_PYTHON_VERSION = python_version \
  $PYAPP_PROJECT_NAME = proj_name \
  $PYAPP_UV_ENABLED = '1' \
  $PYAPP_UV_VERSION = uv_version \
  $PYAPP_PROJECT_PATH = wheel \
: && remove-stale
  {{p}} '{{pyapp}}'; cargo build --release
  {{p}}; {{ if path_exists(bin) == "true" { "rm " + bin } else {""} }}
  {{p}}; mv '{{pyapp_bin}}' '{{bin}}'

# Remove possibly stale PyApp installation
remove-stale:
  {{p}}; {{bin}} self remove

# Change icon
change-icon:
  {{p}}; {{rcedit}} '{{bin}}' --set-icon '{{proj_icon}}'

# Sign binary
sign account='blake-naccarato' profile='blake-naccarato':
  {{p}} '{{invocation_dir()}}'; {{jsign}} \
    --storetype 'TRUSTEDSIGNING' \
    --keystore 'wus3.codesigning.azure.net' \
    --alias '{{account}}/{{profile}}' \
    --storepass (az account get-access-token \
      --resource 'https://codesigning.azure.net' \
      --query 'accessToken' \
    ) \
    '{{bin}}'
